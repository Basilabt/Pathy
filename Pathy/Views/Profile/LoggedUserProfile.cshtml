
@{
    ViewData["Title"] = "Profile";

    clsUserProfileViewModel userProfileCardModel = new clsUserProfileViewModel();

    userProfileCardModel.username = clsGlobal.logedInUser.username;
    userProfileCardModel.fullname = clsGlobal.logedInUser.person.fullname;
    userProfileCardModel.accountType = clsGlobal.account.accountType.accountType;
    userProfileCardModel.numberOfFollowers = clsUser.getNumberOfUserFollowersByUserID(clsGlobal.logedInUser.userID);
    userProfileCardModel.numberOfFollowings = clsUser.getNumberOfUserFollowingsByUserID(clsGlobal.logedInUser.userID);
    userProfileCardModel.photoURL = (clsGlobal.logedInUser.photoURL == "") ? "User.png" : clsGlobal.logedInUser.photoURL;
    userProfileCardModel.cardType = clsUserProfileViewModel.enCardType.CurrentUserProfileCard;

    await Html.RenderPartialAsync("_UserProfileCard", userProfileCardModel);

    
}

@{
    string getUserProfilePictureURL(string img)
    {
        string path = string.IsNullOrEmpty(img) ? "/Images/User.png" : "/Images/People/" + img + ".png";
        return path;
    }
}

@model clsUserProfileViewModel;


<head>

    <link rel="stylesheet" href="~/css/LoggedUserProfile.css" />

</head>


<body>

    <div class="post-container">
        @if (Model.posts.Count > 0)
        {
            @foreach (var post in Model.posts)
            {
                <div class="post-card">
                    <div class="user-info">
                        <img src="@getUserProfilePictureURL(clsGlobal.logedInUser.photoURL)" alt="User Profile">
                        <div class="user-details">
                            <span class="fullname">@post.account.user.person.fullname</span>
                            <span class="username">@@ @post.account.user.username</span>
                            <p class="post-date">
                                @post.creationDateTime.ToString("yyyy-MM-dd HH:mm")
                            </p>
                        </div>
                    </div>

                    <p class="post-content">
                        @post.textContent
                    </p>

                    <div class="post-actions">

                        <form asp-controller="Profile" asp-action="EditUserPost" method="get">
                            <input type="hidden" name="postId" value="@post.postID" />
                            <button type="submit" class="update-btn">Edit</button>
                        </form>

                        <form asp-controller="Profile" asp-action="DeleteUserPost" method="post" onsubmit="return confirm('Are you sure you want to delete ?');">
                            <input type="hidden" name="postId" value="@post.postID" />
                            <button type="submit" class="delete-btn">Delete</button>
                        </form>

                    </div>
                </div>

            }
        }



        @if (TempData["CurrentUserPostActionMessage"] != null)
        {
            <script>
                alert("@TempData["CurrentUserPostActionMessage"]");
            </script>
        }

    </div>


</body>